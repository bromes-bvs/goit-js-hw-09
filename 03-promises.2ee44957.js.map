{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEiBC,SAASC,cAAc,SAE/BC,iBAAiB,UAE1B,SAA0BC,GACxBA,EAAMC,iBACN,MAAMC,EAAaF,EAAMG,OAAOC,SAASC,MAAMC,MACzCC,EAAiBP,EAAMG,OAAOC,SAASI,KAAKF,MAC5CG,EAAaT,EAAMG,OAAOC,SAASM,OAAOJ,MAEhDK,YAAW,KACT,IAAIC,EAAgB,EACpB,MAAMC,EAAaC,aAAY,MAyBnC,SAAuBC,EAAUV,GAC/B,MAAMW,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KACvBL,EAEFI,EAAQ,C,SAAEL,E,MAAUV,IAGpBgB,EAAO,C,SAAEN,E,MAAUV,GAAQ,G,EAhC3BiB,CAAcV,EAAeL,GAC1BgB,MAAK,EAACR,SAAEA,EAAQV,MAAEA,MACjBmB,EAAA7B,GAAS8B,OAAOC,QACd,uBAAqBX,QAAiBV,GAC/BU,EAAY,KAAIb,MACpB,IAGNyB,OAAM,EAACZ,SAAEA,EAAQV,MAAEA,MAClBmB,EAAA7B,GAAS8B,OAAOG,QACd,sBAAoBb,QAAiBV,GAC9BU,EAAY,KAAIb,MACpB,IAGTU,GAAiB,EACbA,GAAiBH,GACnBoB,cAAchB,E,GAGfN,EAAe,GACjBL,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formElem = document.querySelector('.form');\n\nformElem.addEventListener('submit', handelFormSubmit);\n\nfunction handelFormSubmit(event) {\n  event.preventDefault();\n  const inputDelay = event.target.elements.delay.value;\n  const inputDelayStep = event.target.elements.step.value;\n  const inputAmout = event.target.elements.amount.value;\n\n  setTimeout(() => {\n    let startPosition = 1;\n    const intervalId = setInterval(() => {\n      createPromise(startPosition, inputDelayStep)\n        .then(({ position, delay }) => {\n          Notiflix.Notify.success(\n            `✅ Fulfilled promise ${position} in ${\n              delay * (position - 1) + +inputDelay\n            }ms`\n          );\n        })\n        .catch(({ position, delay }) => {\n          Notiflix.Notify.failure(\n            `❌ Rejected promise ${position} in ${\n              delay * (position - 1) + +inputDelay\n            }ms`\n          );\n        });\n      startPosition += 1;\n      if (startPosition > +inputAmout) {\n        clearInterval(intervalId);\n        return;\n      }\n    }, inputDelayStep);\n  }, inputDelay);\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    if (shouldResolve) {\n      // Fulfill\n      resolve({ position, delay });\n    } else {\n      // Reject\n      reject({ position, delay });\n    }\n  });\n}\n// createPromise(2, 1500)\n//   .then(({ position, delay }) => {\n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });\n"],"names":["$eWCmQ","parcelRequire","document","querySelector","addEventListener","event","preventDefault","inputDelay","target","elements","delay","value","inputDelayStep","step","inputAmout","amount","setTimeout","startPosition","intervalId","setInterval","position","shouldResolve","Math","random","Promise","resolve","reject","$47d4ff9957288465$var$createPromise","then","$parcel$interopDefault","Notify","success","catch","failure","clearInterval"],"version":3,"file":"03-promises.2ee44957.js.map"}